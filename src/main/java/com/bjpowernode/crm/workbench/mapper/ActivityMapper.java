package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int updateByPrimaryKey(Activity record);

    //保存创建的市场活动
    int insertActivity(Activity activity);

    //查询市场活动列表按多条件和分页
    List<Activity> selectActivityForPageByCondition(Map<String,Object> map);

    //根据条件去查询市场活动的数量
    long selectCountOfActivityByCondition(Map<String,Object> map);

    //根据id去查询市场活动(用于编辑）
    Activity selectActivityById(String id);

    //保存修改的市场活动
    int updateActivity(Activity activity);

    //根据ids来删除市场活动
    int deleteActivityByIds(String[] ids);

    //导出时要抓取市场活动表中所有数据
    List<Activity> selectActivityForDetailByIds(String[] ids);

    //导入将excel中的多个市场活动导入到数据库市场活动表
    int insertActivityByList(List<Activity> activityList);

    //进入详情页面（用于详细）
    Activity selectActivityForDetailById(String id);

    //在其它模块中需要市场模块的支持
    List<Activity> selectAllActivityForDetail();
    //根据市场活动名查询所有的市场活动
    List<Activity> selectActivityForDetailByName(String name);

    //根据clueId查询，与该线索相关的市场活动
    List<Activity> selectActivityForDetailByClueId(String clueId);

    //查询不属于该线索的市场活动
    List<Activity> selectActivityNoBoundById(Map<String,Object> map);

    //通过与线索关联的市场活动，取出对应的市场活动对象
    //List<Activity> selectActivityForDetailByIds(String[] ids);

}